@import "styles/variables.scss";
@import "styles/buttons.scss";
@import "styles/grid.scss";
@import "styles/layout.scss";
@import "styles/text.scss";
@import "styles/login.scss";
@import "styles/forms.scss";
@import "styles/header.scss";

html {
  background-color: $color-background;
  box-sizing: border-box;

  *,
  *::before,
  *::after {
    box-sizing: border-box;
  }
}

body {
  color: $color-text;
  font-family: $font-family;
  font-size: $font-global-size;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  line-height: $font-global-line-height;
  -ms-overflow-style: -ms-autohiding-scrollbar;
  margin: 0;
}

dt {
  font-weight: $font-weight-bold;
}

p,
.paragraph,
ul,
ol,
dl,
dd,
table {
  margin: 0 0 24px;
}

figure {
  margin: 0;
}

ul,
ol {
  padding-left: 24px;

  ul,
  ol {
    margin-bottom: 0;
  }
}

hr {
  background-color: $color-primary;
  border: 0;
  display: block;
  height: 1px;
  margin: 24px 0;
}

img {
  display: block;
  height: auto;
  max-width: 100%;
  width: 100%;
}

figcaption {
  font-size: 16px;
  margin-top: 10px;
}

code {
  background-color: rgba(0, 0, 0, 0.05);
  font-size: 90%;
  padding: 2px 5px;
}

table {
  border-collapse: collapse;
  border-spacing: 0;
  max-width: 100%;
}

// tr {
//   background-color: $color-grey-light;

//   &:nth-child(even) {
//     background-color: $color-background;
//   }

//   thead + tbody & {
//     background-color: $color-background;

//     &:nth-child(even) {
//       background-color: $color-grey-light;
//     }
//   }

//   .component:not(.backgroundDefault) & {
//     background-color: $color-background;

//     &:nth-child(even) {
//       background-color: $color-grey-light;
//     }
//   }
// }

td,
th {
  padding: 20px;
  text-align: inherit;
  vertical-align: top;
}

th {
  // background-color: $color-background-alt;
  color: $color-headline;

  .component:not(.backgroundDefault) & {
    background-color: $color-background;
  }

  thead & {
    box-shadow: inset 0 -2px 0 0 $color-primary; // because border doesn't work correctly with position: sticky
    vertical-align: bottom;
    // white-space: nowrap; // use instead of vertical-align: bottom if needed
  }

  tbody & {
    // box-shadow: inset -2px 0 0 0 $color-border; // because border doesn't work correctly with position: sticky
  }
}

button {
  appearance: none;
  background-color: transparent;
  border: 0;
  color: inherit;
  font-family: inherit;
  font-size: inherit;
  line-height: inherit;
  padding: 0;
  text-align: inherit;
}

form {
  margin: 0;
}

address {
  font-style: normal;
}
